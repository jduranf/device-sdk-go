# Copyright 2019 Circutor. All rights reserved.
name: "line-M-4IO-A"
manufacturer: "Circutor"
model: "line-M-4IO-A"
description: "Module analog inputs/outputs"
labels: []
deviceResources:
    -
        name: SerialNumber
        description: "Factory Device Serial Number"
        attributes:
            { PrimaryTable: "HoldingRegister", StartingAddress: "61440", ValueType: "STRING", Length: "7", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "String", readWrite: "R" }
    -
        name: FirmwareVersion
        description: "Firmware Version"
        attributes:
            { PrimaryTable: "InputRegister", StartingAddress: "49800", ValueType: "ARRAY", Length: "3", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "String", readWrite: "R" }
    -
        name: VoltageOutput1
        description: "Target value for AO1 in mV"
        attributes:
            { PrimaryTable: "HoldingRegister", StartingAddress: "15000", ValueType: "UINT16", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "RW", scale: "1" }
            units:
                { type: "String", defaultValue: "mV" }
    -
        name: VoltageOutput2
        description: "Target value for AO2 in mV"
        attributes:
            { PrimaryTable: "HoldingRegister", StartingAddress: "15001", ValueType: "UINT16", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "RW", scale: "1" }
            units:
                { type: "String", defaultValue: "mV" }
    -
        name: VoltageOutput3
        description: "Target value for AO3 in mV"
        attributes:
            { PrimaryTable: "HoldingRegister", StartingAddress: "15002", ValueType: "UINT16", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "RW", scale: "1" }
            units:
                { type: "String", defaultValue: "mV" }
    -
        name: VoltageOutput4
        description: "Target value for AO4 in mV"
        attributes:
            { PrimaryTable: "HoldingRegister", StartingAddress: "15003", ValueType: "UINT16", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "RW", scale: "1" }
            units:
                { type: "String", defaultValue: "mV" }
    -
        name: CurrentOutput1
        description: "Target value for AO1 in uA"
        attributes:
            { PrimaryTable: "HoldingRegister", StartingAddress: "15020", ValueType: "UINT16", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "RW", scale: "1" }
            units:
                { type: "String", defaultValue: "uA" }
    -
        name: CurrentOutput2
        description: "Target value for AO2 in uA"
        attributes:
            { PrimaryTable: "HoldingRegister", StartingAddress: "15021", ValueType: "UINT16", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "RW", scale: "1" }
            units:
                { type: "String", defaultValue: "uA" }
    -
        name: CurrentOutput3
        description: "Target value for AO3 in uA"
        attributes:
            { PrimaryTable: "HoldingRegister", StartingAddress: "15022", ValueType: "UINT16", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "RW", scale: "1" }
            units:
                { type: "String", defaultValue: "uA" }
    -
        name: CurrentOutput4
        description: "Target value for AO4 in uA"
        attributes:
            { PrimaryTable: "HoldingRegister", StartingAddress: "15023", ValueType: "UINT16", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "RW", scale: "1" }
            units:
                { type: "String", defaultValue: "uA" }
    -
        name: CurrentInput1
        description: "Measured value for AI1 in uA"
        attributes:
            { PrimaryTable: "InputRegister", StartingAddress: "5040", ValueType: "UINT32", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "R", scale: "1" }
            units:
                { type: "String", defaultValue: "uA" }
    -
        name: CurrentInput2
        description: "Measured value for AI2 in uA"
        attributes:
            { PrimaryTable: "InputRegister", StartingAddress: "5042", ValueType: "UINT32", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "R", scale: "1" }
            units:
                { type: "String", defaultValue: "uA" }
    -
        name: CurrentInput3
        description: "Measured value for AI3 in uA"
        attributes:
            { PrimaryTable: "InputRegister", StartingAddress: "5044", ValueType: "UINT32", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "R", scale: "1" }
            units:
                { type: "String", defaultValue: "uA" }
    -
        name: CurrentInput4
        description: "Measured value for AI4 in uA"
        attributes:
            { PrimaryTable: "InputRegister", StartingAddress: "5046", ValueType: "UINT32", IsByteSwap: "false" , IsWordSwap: "false" }
        properties:
            value:
                { type: "Float", readWrite: "R", scale: "1" }
            units:
                { type: "String", defaultValue: "uA" }

resources:
    -
        name: SerialNumber
        get:
          - { object: "SerialNumber", parameter: "SerialNumber" }
    -
        name: FirmwareVersion
        get:
          - { object: "FirmwareVersion", parameter: "FirmwareVersion" }
    -
        name: VoltageOutput1
        get:
          - { object: "VoltageOutput1", parameter: "VoltageOutput1" }
        set:
          - { object: "VoltageOutput1", parameter: "VoltageOutput1" }
    -
        name: VoltageOutput2
        get:
          - { object: "VoltageOutput2", parameter: "VoltageOutput2" }
        set:
          - { object: "VoltageOutput2", parameter: "VoltageOutput2" }
    -
        name: VoltageOutput3
        get:
          - { object: "VoltageOutput3", parameter: "VoltageOutput3" }
        set:
          - { object: "VoltageOutput3", parameter: "VoltageOutput3" }
    -
        name: VoltageOutput4
        get:
          - { object: "VoltageOutput4", parameter: "VoltageOutput4" }
        set:
          - { object: "VoltageOutput4", parameter: "VoltageOutput4" }
    -
        name: CurrentOutput1
        get:
          - { object: "CurrentOutput1", parameter: "CurrentOutput1" }
        set:
          - { object: "CurrentOutput1", parameter: "CurrentOutput1" }
    -
        name: CurrentOutput2
        get:
          - { object: "CurrentOutput2", parameter: "CurrentOutput2" }
        set:
          - { object: "CurrentOutput2", parameter: "CurrentOutput2" }
    -
        name: CurrentOutput3
        get:
          - { object: "CurrentOutput3", parameter: "CurrentOutput3" }
        set:
          - { object: "CurrentOutput3", parameter: "CurrentOutput3" }
    -
        name: CurrentOutput4
        get:
          - { object: "CurrentOutput4", parameter: "CurrentOutput4" }
        set:
          - { object: "CurrentOutput4", parameter: "CurrentOutput4" }
    -
        name: CurrentInput1
        get:
          - { object: "CurrentInput1", parameter: "CurrentInput1" }
    -
        name: CurrentInput2
        get:
          - { object: "CurrentInput2", parameter: "CurrentInput2" }
    -
        name: CurrentInput3
        get:
          - { object: "CurrentInput3", parameter: "CurrentInput3" }
    -
        name: CurrentInput4
        get:
          - { object: "CurrentInput4", parameter: "CurrentInput4" }
    -
        name: CurrentInputs
        get:
          - { object: "CurrentInput1", parameter: "CurrentInput1" }
          - { object: "CurrentInput2", parameter: "CurrentInput2" }
          - { object: "CurrentInput3", parameter: "CurrentInput3" }
          - { object: "CurrentInput4", parameter: "CurrentInput4" }
